name: Flutter CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version (specify version to create a release, leave blank for debug build)'
        required: false
        default: ''

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            build-command: apk
          - os: macos-latest
            platform: ios
            build-command: ios --no-codesign
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      
      - uses: subosito/flutter-action@v2

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Flutter Analyzer
        run: flutter analyze

      - name: Run Dart Formatter
        run: dart format .

      - name: Run Unit Tests
        run: flutter test

      - name: Build ${{ matrix.platform }} App
        run: |
          if [[ -z "${{ github.event.inputs.releaseVersion }}" ]]; then
            echo "Building debug ${{ matrix.platform }} app..."
            flutter build ${{ matrix.build-command }} --debug
          else
            echo "Building release ${{ matrix.platform }} app..."
            flutter build ${{ matrix.build-command }} --release
          fi

      - name: List Build Outputs
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            ls -l build/app/outputs/flutter-apk/
          else
            ls -l build/ios/iphoneos/
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ github.event.inputs.releaseVersion || 'debug' }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/iphoneos/*.app

  create_release:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event.inputs.releaseVersion != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses:  softprops/action-gh-release@4634c16e79c963813287e889244c50009e7f0981
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          name: Release ${{ github.event.inputs.releaseVersion }}
          body: Description of the changes for this release...
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
