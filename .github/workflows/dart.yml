name: Flutter CI-CD

# 1
on:
  # 2
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # 3
  workflow_dispatch:
    inputs:
      createRelease:
        description: 'Create Release (set true to create a release)'
        required: true
        default: 'false'
      version:
        description: 'App Version for the Release'
        required: true

# 4
jobs:
  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v4
      # 9
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      # 10   
      - uses: subosito/flutter-action@v2

      # 12
      - name: Install Dependencies
        run: flutter pub get

      - name: Run Flutter Analyzer
        run: flutter analyze

      - name: Run Dart Formatter
        run: dart format .

      - name: Run Unit Tests
        run: flutter test

      # Runs a set of commands using the runners shell
      - name: Build APK
        run: flutter build apk

      # List APK files
      - name: List APK files
        run: ls -l build/app/outputs/flutter-apk/

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # Create tag
      - uses: actions/checkout@v4
      - uses: jacopocarlini/action-autotag@3.0.0
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  create_release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.createRelease == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: jacopocarlini/action-autotag@3.0.0
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
